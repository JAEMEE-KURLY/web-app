{"remainingRequest":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/thread-loader/dist/cjs.js!/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/babel-loader/lib/index.js!/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/src/components/Category.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/src/components/Category.vue","mtime":1661312664267},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/babel.config.js","mtime":1661257261584},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CategoryDataService from \"../service/CategoryDataService\";\nimport SiteDataService from \"../service/SiteDataService\";\nexport default {\n  name: \"Category\",\n  data: function data() {\n    return {\n      prod_name: \"\",\n      selected_site: [],\n      options: [],\n      //[{id:1, site_name:'11st'}, {id:2, site_name:'SSG'}],\n      errors: []\n    };\n  },\n  computed: {\n    id: function id() {\n      return this.$route.params.id;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    SiteDataService.retrieveAllSites().then(function (res) {\n      res.data.forEach(function (e) {\n        _this.options.push({\n          id: e.id,\n          site_name: e.siteName\n        });\n      });\n    });\n  },\n  methods: {\n    refreshCategoryDetails: function refreshCategoryDetails() {\n      var _this2 = this;\n\n      CategoryDataService.retrieveCategory(this.id).then(function (res) {\n        _this2.prod_name = res.data.categoryName;\n        _this2.seleted_site = res.data.targetInfo;\n        var temp = res.data.targetInfo.split(\",\");\n        temp.forEach(function (e) {\n          return _this2.selected_site.push(e.toString());\n        });\n      });\n    },\n    validateAndSubmit: function validateAndSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      this.errors = [];\n\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          CategoryDataService.createCategory({\n            categoryName: this.prod_name,\n            targetInfo: JSON.parse(JSON.stringify(this.selected_site)).join(\",\")\n          }).then(function () {\n            _this3.$router.push(\"/category\");\n          });\n        } else {\n          CategoryDataService.updateCategory(this.id, {\n            id: this.id,\n            categoryName: this.prod_name,\n            targetInfo: JSON.parse(JSON.stringify(this.selected_site)).join(\",\")\n          }).then(function () {\n            _this3.$router.push(\"/category\");\n          });\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.refreshCategoryDetails();\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AAEA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,mBADA;AAEAC,uBAFA;AAGAC,iBAHA;AAGA;AACAC;AAJA;AAMA,GATA;AAUAC;AACAC,MADA,gBACA;AACA;AACA;AAHA,GAVA;AAeAC,SAfA,qBAeA;AAAA;;AACAC;AACAC;AACA;AAAAH;AAAAI;AAAA;AACA,OAFA;AAGA,KAJA;AAKA,GArBA;AAsBAC;AACAC,0BADA,oCACA;AAAA;;AACAC;AACA;AACA;AACA;AACAC;AAAA;AAAA;AACA,OALA;AAMA,KARA;AASAC,qBATA,6BASAC,CATA,EASA;AAAA;;AACAA;AACA;;AAEA;AACA;AACAH;AACAI,wCADA;AAEAC;AAFA,aAGAC,IAHA,CAGA;AACA;AACA,WALA;AAMA,SAPA,MAOA;AACAN;AACAP,uBADA;AAEAW,wCAFA;AAGAC;AAHA,aAIAC,IAJA,CAIA;AACA;AACA,WANA;AAOA;AACA;AACA;AA/BA,GAtBA;AAuDAC,SAvDA,qBAuDA;AACA;AACA;AAzDA","names":["name","data","prod_name","selected_site","options","errors","computed","id","mounted","SiteDataService","res","site_name","methods","refreshCategoryDetails","CategoryDataService","temp","validateAndSubmit","e","categoryName","targetInfo","then","created"],"sourceRoot":"src/components","sources":["Category.vue"],"sourcesContent":["/* eslint-disbable */\n<template>\n  <div>\n    <h3>Category</h3>\n    <div class=\"container\">\n      <form @submit=\"validateAndSubmit\">\n        <div v-if=\"errors.length\">\n          <div\n            class=\"alert alert-danger\"\n            v-bind:key=\"index\"\n            v-for=\"(error, index) in errors\"\n          >\n            {{ error }}\n          </div>\n        </div>\n        <fieldset class=\"form-group\">\n          <label>품목명</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"prod_name\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>수집 사이트 선택</label>\n          <div v-for=\"(value, index) in options\" :key=\"index\">\n            <input type=\"checkbox\" :id=\"value.id\" v-model=\"selected_site\" :value=\"value.id\">{{value.site_name}}</input>\n          </div>\n           \n        </fieldset>\n        <button class=\"btn btn-success\" \n        type=\"submit\">Save</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport CategoryDataService from '../service/CategoryDataService';\nimport SiteDataService from '../service/SiteDataService';\n\nexport default {\n  name: \"Category\",\n  data() {\n    return {\n      prod_name: \"\",\n      selected_site: [],\n      options: [],//[{id:1, site_name:'11st'}, {id:2, site_name:'SSG'}],\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  mounted(){\n    SiteDataService.retrieveAllSites().then((res)=>{\n      res.data.forEach(e => {\n        this.options.push({id:e.id, site_name:e.siteName})\n      })\n    })\n  },\n  methods: {\n    refreshCategoryDetails() {\n      CategoryDataService.retrieveCategory(this.id).then((res) => {\n        this.prod_name = res.data.categoryName;\n        this.seleted_site = res.data.targetInfo;\n        let temp = res.data.targetInfo.split(\",\")\n        temp.forEach(e => this.selected_site.push(e.toString()))\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n  \n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          CategoryDataService.createCategory({\n            categoryName: this.prod_name,\n            targetInfo: JSON.parse(JSON.stringify(this.selected_site)).join(\",\"),\n          }).then(() => {\n            this.$router.push(\"/category\");\n          });\n        } else {\n          CategoryDataService.updateCategory(this.id, {\n            id: this.id,\n            categoryName: this.prod_name,\n            targetInfo: JSON.parse(JSON.stringify(this.selected_site)).join(\",\"),\n          }).then(() => {\n            this.$router.push(\"/category\");\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshCategoryDetails();\n  },\n};\n</script>\n"]}]}