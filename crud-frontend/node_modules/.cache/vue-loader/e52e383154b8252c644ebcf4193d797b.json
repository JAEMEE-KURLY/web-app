{"remainingRequest":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/src/components/SitePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/src/components/SitePage.vue","mtime":1661326020143},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimhayoung/Documents/2022/kurly/web-app/crud-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport SiteDataService from '../service/SiteDataService';\n\nexport default {\n  name: \"SitePage\",\n  data() {\n    return {\n      sites: [],\n      message: \"\",\n    };\n  },\n  methods: {\n    refreshSitePage() {\n      SiteDataService.retrieveAllSites().then((res) => {\n        console.log(res)\n        this.sites = res.data;\n      });\n    },\n    addSite() {\n      this.$router.push(`/site/-1`);\n    },\n    updateSite(id) {\n      this.$router.push(`/site/${id}`);\n    },\n    deleteSite(id) {\n      SiteDataService.deleteSite(id).then(() => {\n        this.refreshSitePage();\n      });\n    },\n  },\n  created() {\n    this.refreshSitePage();\n  },\n};\n",{"version":3,"sources":["SitePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SitePage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h3> 사이트 관리 화면 </h3>\n    <div v-if=\"message\" class=\"alert alert-success\">\n      {{ this.message }}</div>\n        <div class=\"row\">\n        <button class=\"btn btn-success\" v-on:click=\"addSite()\">Add</button>\n      </div>\n    <div class=\"container\">\n      <table class=\"table\">\n        <thead>\n          <tr> \n            <th>idx</th>\n            <th>사이트명</th>\n            <th>사이트 URL</th>\n            <th>수정</th>\n            <th>삭제</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"item in sites\" v-bind:key=\"item.id\">\n          \n            <td>{{ item.id }}</td>\n            <td>{{ item.siteName }}</td>\n            <td>{{ item.url }}</td>\n            <td>\n              <button class=\"btn btn-warning\" \n              v-on:click=\"updateSite(item.id)\">\n                Update\n              </button>\n            </td>\n            <td>\n              <button class=\"btn btn-danger\" \n              v-on:click=\"deleteSite(item.id)\">\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    \n    </div>\n  </div>\n</template>\n<script>\n\nimport SiteDataService from '../service/SiteDataService';\n\nexport default {\n  name: \"SitePage\",\n  data() {\n    return {\n      sites: [],\n      message: \"\",\n    };\n  },\n  methods: {\n    refreshSitePage() {\n      SiteDataService.retrieveAllSites().then((res) => {\n        console.log(res)\n        this.sites = res.data;\n      });\n    },\n    addSite() {\n      this.$router.push(`/site/-1`);\n    },\n    updateSite(id) {\n      this.$router.push(`/site/${id}`);\n    },\n    deleteSite(id) {\n      SiteDataService.deleteSite(id).then(() => {\n        this.refreshSitePage();\n      });\n    },\n  },\n  created() {\n    this.refreshSitePage();\n  },\n};\n</script>"]}]}